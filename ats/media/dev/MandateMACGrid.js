/*
 * File: MandateMACGrid.js
 * Date: Thu Mar 31 2011 00:12:27 GMT-0400 (EDT)
 * 
 * This file was generated by Ext Designer version xds-1.0.2.14.
 * http://www.extjs.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

MandateMACGrid = Ext.extend(MandateMACGridUi, {
    initComponent: function() {
        MandateMACGrid.superclass.initComponent.call(this);

        //Template to display in any panel from a record of this.grid
        this.infotpl = new Ext.XTemplate(
            '<tpl for="."> <div class="preview">',
            ' <div class="info-data">',
            '  <span class="info-date">{date:date("M j, Y")}</span>',
            '  <tpl if="candidate"><tpl for="candidate.fields">',
            '      <h3 class="info-title">{first_name} {last_name}</h3>',
            '  </tpl></tpl>',
            '  <tpl if="status"><tpl for="status.fields">',
            '   <h4 class="info-header">Status {title}</h4>',
            '  </tpl></tpl>',
            '  <tpl if="activity"><tpl for="activity.fields">',
            '   <h4 class="info-header">Activity {title}</h4>',
            '  </tpl></tpl>',
            ' </div>',
            ' <div class="info-body">{description}</div>',
            '</div></tpl>',
            {
                compile: true
            }
            );

        this.newbutton.on('click', this.onNewClick, this );
        this.editbutton.on('click', this.onEditClick, this );
    }
    ,onRender: function(ct, position) {
        MandateMACGrid.superclass.onRender.call(this, ct, position);
        this.applyColumnCandidateRenderer( this );
        this.applyColumnActivityRenderer( this );
        this.applyColumnStatusRenderer( this );
    }
    ,onNewClick: function ( button, event ){
        var mandate__id = this.store.baseParams["mandate__id"];
        if ( !Ext.isEmpty( mandate__id ) ){
            var win = new MACNewWindow();
            //personalize title for candidate
            win.setTitle( win.title + " MANDATE " + mandate__id ); 
            //set to upload file and assign to this mandate
            var field = win.form.getForm().findField( 'mandate' );
            field.setValue( mandate__id );
            field.readOnly = true;
            field.editable = false;
            win.show();
        } else {
            Ext.Msg.alert('Warning','Mandate must be selected');
        }
    }
    ,onEditClick: function ( button, event ){
        var record = this.selModel.getSelected();
        var mandate__id = this.store.baseParams["mandate__id"];

        if ( !Ext.isEmpty( mandate__id ) && !Ext.isEmpty( record ) ){
            var win = new MACEditWindow();

            //personalize title for mandate
            win.setTitle( win.title + " MANDATE " + mandate__id );
            if ( !Ext.isEmpty( record.data.candidate ) ) {
                win.setTitle( win.title + " CANDIDATE " + 
                              record.data.candidate.fields.first_name + " " +
                              record.data.candidate.fields.last_name);
            }

            //set to upload file and assign to this candidate
            var formpanel = win.items.itemAt(0);
    	    formpanel.populateRecord( record );
            formpanel.markReadOnlyFields( {'candidate': true, 'mandate': true} );
            win.show();
         } else {
            Ext.Msg.alert('Warning','Event must be selected');
        }
    }
    ,onSortChange: function( grid, sortInfo ) {
    }
    ,onContextClick : function( grid, index, e ){
    }
    ,setQuery: function ( query ){
    }
    ,applyColumnCandidateRenderer: function ( grid ) {
        var cm = grid.getColumnModel();
        var column = null;
        //candidate__first_name
        column = cm.getColumnById('candidate__first_name');
        if ( !Ext.isEmpty( column ) ){
            column.renderer = function( value, cell ) {
                if ( !Ext.isEmpty( value ) ) {
                    return value['fields']['first_name'];
                }
            } 
        }
        //candidate__last_name
        column = cm.getColumnById('candidate__last_name');
        if ( !Ext.isEmpty( column ) ){
            column.renderer = function( value, cell ) {
                if ( !Ext.isEmpty( value ) ) {
                    return value['fields']['last_name'];
                }
            } 
        }
     }
    ,applyColumnStatusRenderer: function ( grid ) {
        var cm = grid.getColumnModel();
        var column = null;
        //status__title
        column = cm.getColumnById('status__title');
        if ( !Ext.isEmpty( column ) ){
            column.renderer = function( value, cell ) {
                if ( !Ext.isEmpty( value ) ) {
                    return value['fields']['title'];
                }
            } 
        }
     }
     ,applyColumnActivityRenderer: function ( grid ) {
        var cm = grid.getColumnModel();
        var column = null;
        //activity__title
        column = cm.getColumnById('activity__title');
        if ( !Ext.isEmpty( column ) ){
            column.renderer = function( value, cell ) {
                if ( !Ext.isEmpty( value ) ) {
                    return value['fields']['title'];
                }
            } 
        }
     }
});
Ext.reg('mandatemacgrid', MandateMACGrid);
