/*
 * File: MandateGrid.js
 * Date: Fri Aug 06 2010 00:49:37 GMT-0400 (EDT)
 * 
 * This file was generated by Ext Designer version xds-1.0.2.11.
 * http://www.extjs.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

MandateGrid = Ext.extend(MandateGridUi, {
    initComponent: function() {
        MandateGrid.superclass.initComponent.call(this);

        //searchfield in toolbar
        this.searchfield =  new Ext.ux.form.SearchField({
                 store: this.store
                 ,width: 350
            });


        //Template to display in any panel from a record of this.grid
        this.infotpl = new Ext.XTemplate(
            '<tpl for="."> <div class="preview">',
            ' <div class="info-data">',
            '  <span class="info-date">{posting_end_date:date("M j, Y")}</span>',
            '  <h3 class="info-title">{title}</h3>',
            '  <tpl if="status"><tpl for="status.fields">',
            '   <h4 class="info-header">Status {title}</h4>',
            '  </tpl></tpl>',
            ' </div>',
            ' <div class="info-body">',
            '  <span><h3 class="info-title">Responsability</h3>{responsability}</span>',
            '  </br>',
            '  <span><h3 class="info-title">Requirement</h3>{requirement}</span>',
            ' </div>',
            '</div></tpl>',
            {
                compile: true
            }
            );

        //this.on('sortchange', this.onSortChange, this );
        //this.on('rowcontextmenu', this.onContextClick, this );
        this.newbutton.on('click', this.onNewClick, this );
        this.addmacbutton.on('click', this.onAddMACClick, this );
        this.macsbutton.on('click', this.onMACsClick, this );
        this.candidatesbutton.on('click', this.onCandidatesClick, this );
    }
    ,onRender: function(ct, position) {
        MandateGrid.superclass.onRender.call(this, ct, position);
        this.getTopToolbar().add(
            '->',
            'Search',
            ' ', 
            this.searchfield
            );
        //column renderers
        this.applyColumnStatusRenderer( this );
        this.applyColumnHiringManagerRenderer( this );

    }
    ,onNewClick: function ( button, event ){
        var win = new MandateNewWindow();
        win.show();
    }
    ,setQuery: function ( query ){
        this.searchfield.setQuery( query );
    }
    ,onAddMACClick: function ( button, event ){
        var selected = this.selModel.getSelected();
        if ( !Ext.isEmpty( selected ) ){
            var win = new MACNewWindow();
            win.form.getForm().findField('mandate').setValue( 
                selected.data["id"]
            ); 
            win.show();
         }
    }
    ,onMACsClick: function ( button, event ){
        var selected = this.selModel.getSelected();
        if ( !Ext.isEmpty( selected ) ){
            mandate__id = selected.data["id"];
            //must go in MainTabPanelClass
            var mainpanel =  Ext.getCmp('maintabpanel');
            mainpanel.activate( mainpanel.mactab );
            mainpanel.mactab.grid.setQuery(
                { 'mandate': mandate__id }
            );
         }
    }
    ,onCandidatesClick: function ( button, event ){
        var selected = this.selModel.getSelected();
        if ( !Ext.isEmpty( selected ) ){
            var mandate__id = selected.data["id"];
            //must go in MainTabPanelClass
            var mainpanel =  Ext.getCmp('maintabpanel');
            mainpanel.activate( mainpanel.candidatetab );
            mainpanel.candidatetab.grid.setQuery(
                { 'mandate': mandate__id }
            );
         }
    }
    ,applyColumnStatusRenderer: function ( grid ) {
        var cm = grid.getColumnModel();
        var column = cm.getColumnById('status__title');
        if ( !Ext.isEmpty( column ) ){
            column.renderer = function( value, cell ) {
                if ( !Ext.isEmpty( value ) ) {
                    return value['fields']['title'];
                }
            } 
        }
     }
     ,applyColumnHiringManagerRenderer: function ( grid ) {
        var cm = grid.getColumnModel();
        var column = cm.getColumnById('hiring_manager__name');
        if ( !Ext.isEmpty( column ) ){
            column.renderer = function( value, cell ) {
                if ( !Ext.isEmpty( value ) ) {
                    return value['fields']['name'];
                }
            } 
        }
     }
     
 });
Ext.reg('mandategrid', MandateGrid);
