/*
 * File: MandatesClass.js
 * Date: Fri Aug 06 2010 00:49:37 GMT-0400 (EDT)
 * 
 * This file was generated by Ext Designer version xds-1.0.2.11.
 * http://www.extjs.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

MandateClass = Ext.extend(MandateClassUi, {
    initComponent: function() {
        MandateClass.superclass.initComponent.call(this);

        var sm = this.grid.getSelectionModel();
        sm.on( 'selectionchange'
              ,this.onGridRowSelectionChange
              ,this
              ,{ buffer:250 } );

        var sm = this.macgrid.getSelectionModel();
        sm.on( 'selectionchange'
              ,this.onMACGridRowSelectionChange
              ,this
              ,{ buffer:250 } );
    }
    ,resetSubGrids: function() {
        this.macgrid.store.removeAll();
        this.candidatesgrid.store.removeAll();
    }
    ,updateSubGrids: function( record ) {
        this.macgrid.store.setBaseParam( 'mandate__id'
                                        ,record.data["id"] );
        this.macgrid.store.load();

        this.candidatesgrid.store.setBaseParam( 'mandate__id'
                                               ,record.data["id"] );
        this.candidatesgrid.store.load();
    }
    ,resetInfoPanel: function() {
        this.infopanel.tpl = null;
        this.infopanel.update( {} );
    }
    ,updateInfoPanel: function( tpl, record ) {
       this.infopanel.tpl = tpl;
       this.infopanel.update( record.data );
    }
    ,resetForms: function() {
        //Reset forms
        this.mandateeditform.getForm().reset();
        this.mandateresponsabilityform.getForm().reset();
        this.mandaterequirementform.getForm().reset();
        this.mandateclosingform.getForm().reset();
    }
    ,updateForms: function( record ){
        var mandateeditform = this.mandateeditform.getForm();
        var mandateresponsabilityform =
            this.mandateresponsabilityform.getForm();
        var mandaterequirementform = this.mandaterequirementform.getForm();
        var mandateclosingform = this.mandateclosingform.getForm();

        //UPDATE FORMS
        mandateresponsabilityform.loadRecord( record );
        mandaterequirementform.loadRecord( record );
        mandateclosingform.loadRecord( record );
        mandateeditform.loadRecord( record );
        //load select
        if ( record.data.status != null ) {
            mandateeditform.findField('status').setValue(
                record.data.status['pk'] 
            );
        }
        if ( record.data.hiring_manager != null ) {
            mandateeditform.findField('hiring_manager').setValue(
                record.data.hiring_manager['pk'] 
            );
        }
    }
    ,onGridRowSelectionChange: function( sm ) {
        this.resetForms();
        this.resetInfoPanel();
        this.resetSubGrids();
        //Get selection
        if ( sm.getCount() == 1 ) {
            var record = sm.getSelected();
            this.updateInfoPanel( this.grid.infotpl, record );
            this.updateForms( record );
            this.updateSubGrids( record );
        }
    }
    ,onMACGridRowSelectionChange: function( sm ) {
        //Get selection
        if ( sm.getCount()  == 1 ) {
            var record = sm.getSelected();
            this.updateInfoPanel( this.macgrid.infotpl, record );
        }
    }
});
Ext.reg('mandateclass', MandateClass);
